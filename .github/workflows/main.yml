name: Coding-Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Coding-Test
    strategy:
      matrix:
        dotnet: [ '3.1.x' ]
        
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        
    # Format the output of dotnet format
    - name: Add dotnet-format problem matcher
      uses: xt0rted/dotnet-format-problem-matcher@v1
      # Install dotnet format as a global tool
    - name: Install dotnet format
      run: dotnet tool update --global dotnet-format

    # Run dotnet format --dry-run --check
    # By default, the task ensure the exit code is 0
    # If a file needs to be edited by dotnet format, the exit code will be a non-zero value
    # So the task will fail
    - name: Run dotnet format Coding-Test
      run: dotnet format Coding-Test/Coding-Test.csproj --check --verbosity diagnostic
      
    - name: Run dotnet format Unit-Test
      run: dotnet format Unit-Test/Unit-Test.csproj --check --verbosity diagnostic
      
    - name: Restore dependencies
      run: dotnet restore Coding-Test.sln
    - name: Build
      run: dotnet build Coding-Test.sln --no-restore
    - name: Test
      run: dotnet test Unit-Test/Unit-Test.csproj --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
    - name: Build container image
      run: docker-compose up
    
